#PRE-ESF SETUP
- name: Pre-ESF Setup
  debug:
    msg: "Pre-ESF Setup"

#Firewall Workaround Setup (EFS 6.2.0 only)
#This workaround is required due to race conditions in iptables when ESF and Docker both try to control/modify/manage iptables
#In addition, an ESF bug requires additional workarounds due to an iptables rule required by docker crashing the ESF firewall management package
#These issues are resolved in ESF 7 and above, so this workaround is only applied to gateways running ESF 6.
- name: ESF 6.2.0 Firewall Workaround Block
  block:
    - name: Ensure directories exists for firewall workaround (SKIP = ESF 7)
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "/opt/firewall-docker-workaround/"
        - "/etc/init.d/"

    #Firewall Workaround Setup (EFS 6.2.0 only)
    - name: Copy firewall workaround files (SKIP = EFS 7)
      get_url: 
        url: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
        checksum: "md5:{{ item.checksum }}"
      with_items:
        - { src: "{{ aws_url }}/firewall/addon-iptables", dest: /opt/firewall-docker-workaround/, mode: "0644", checksum: "{{ addon_iptables_md5 }}"}
        - { src: "{{ aws_url }}/firewall/firewall_cust", dest: /etc/init.d/, mode: "0755", checksum: "{{ firewall_cust_md5 }}" }
        - { src: "{{ aws_url }}/firewall/firewall_cust_aux", dest: /etc/init.d/, mode: "0755", checksum: "{{ firewall_cust_aux_md5 }}" }

    - name: Import custom firewall rules into system (SKIP = ESF 7)
      shell: iptables-restore -n < /etc/sysconfig/iptables
  when: esf_major_version == "6" #block when

# Docker Configuration for Log Rotation
# This will download the docker daemon.json file ONLY if it doesn't already exist
# If daemon.json already exists, we assume it already handles logging because we don't want to overwrite it 
# and cause problems for the existing docker setup
- name: Download docker daemon config file (only if a docker daemon config file doesn't exist already)
  get_url: 
    url: "{{ aws_url }}/docker_config/daemon.json"
    dest: "/etc/docker/daemon.json"
    mode: "0644"
    checksum: "md5:{{ docker_daemon_json_md5 }}"
    force: no #If file already exists, download-compare-replace operation will not be executed
  register: get_url_results
  
# If docker daemon config was changed, restart docker to apply changes
- name: Restart docker to apply docker daemon config changes (SKIP = config wasn't changed)
  systemd:
    name: docker
    state: restarted
  when: get_url_results.changed #skip if daemon.json wasn't changed in previous task

#Create chirpstack Docker bridge network
- name: create docker network chirpbridge
  command: docker network create -d bridge --subnet 172.18.0.0/16 --gateway 172.18.0.1 --opt com.docker.network.bridge.name=chirpbridge chirpbridge