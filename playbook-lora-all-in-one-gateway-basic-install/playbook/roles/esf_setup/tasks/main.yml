#ESF SETUP
- name: ESF Setup
  debug:
    msg: "ESF Setup"

- name: Install Raw MQTT Package
  uri:
    url: "{{ esf_api_http_protocol }}://127.0.0.1/services/deploy/v1/_install"
    user: "{{esf_username}}"
    password: "{{esf_password}}"
    status_code: 200
    force_basic_auth: yes
    validate_certs: no
    method: POST
    body_format: json
    body:
      url: "{{ aws_url }}/packages/com.eurotech.framework.amq7_1.1.0.dp"
    return_content: yes
  register: esf_api_response

- name: Confirm Package is Installing (SKIP = Pass)
  fail:
    msg: "ESF API Call to install package returned unexpected response: {{ esf_api_response.content }} ***FULL DEBUG INFO***: {{ esf_api_response }}"
  when: esf_api_response.content is not search("REQUEST_RECEIVED")

- name: Install AMQ7 Package
  uri:
    url: "{{ esf_api_http_protocol }}://127.0.0.1/services/deploy/v1/_install"
    user: "{{esf_username}}"
    password: "{{esf_password}}"
    status_code: 200
    force_basic_auth: yes
    validate_certs: no
    method: POST
    body_format: json
    body:
      url: "{{ aws_url }}/packages/org.eclipse.kura.cloudconnection.raw.mqtt.provider_1.0.0.dp"
    return_content: yes
  register: esf_api_response

- name: Confirm Package is Installing (SKIP = Pass)
  fail:
    msg: "ESF API Call to install package returned unexpected response: {{ esf_api_response.content }} ***FULL DEBUG INFO***: {{ esf_api_response }}"
  when: esf_api_response.content is not search("REQUEST_RECEIVED")

- name: package install confirmation
  block:
    - name: Wait for packages to be installed (can take up to 30 seconds)
      uri: #get list of installed packages
        url: "{{ esf_api_http_protocol }}://127.0.0.1/services/deploy/v1/"
        user: "{{esf_username}}"
        password: "{{esf_password}}"
        status_code: 200
        force_basic_auth: yes
        validate_certs: no
        method: GET
        return_content: yes
      register: esf_api_response
      retries: 15
      delay: 2
      until: #list indicates implicit AND between all list items
        - (esf_api_response.json | to_json) is search("org.eclipse.kura.cloudconnection.raw.mqtt.provider")
        - (esf_api_response.json | to_json) is search("com.eurotech.framework.amq7")
      any_errors_fatal: true

  rescue:
    - name: Packages failed to install within 30 seconds
      fail:
        msg: "FAILURE: Packages failed to install within 30 seconds. Check EFS configuration and log for errors."

#Apply snapshot containing config for Raw MQTT Cloud Connection and Artemis MQTT Broker
- name: Apply Raw MQTT Cloud Connection and Artemis MQTT Broker Settings Snapshot to ESF
  uri:
    url: "{{ esf_api_http_protocol }}://127.0.0.1/services/configuration/v1/snapshots/_upload"
    user: "{{esf_username}}"
    password: "{{esf_password}}"
    status_code: 200
    force_basic_auth: yes
    validate_certs: no
    method: POST
    headers: 
      Content-Type: "application/xml" 
    body: "{{lookup('url', aws_url+'/snapshots/LoRa_system_base_snapshot.xml', errors='strict', split_lines=False)}}" #stream xml file directly from AWS 

##Add Open Port 1883 for interface Chirpbridge to Firewall
#Get Current Firewall Config
- name: Get Current Firewall Configuration from ESF
  uri:
    url: "{{ esf_api_http_protocol }}://127.0.0.1/services/configuration/v1/configurableComponents/configurations/byPid/org.eclipse.kura.net.admin.FirewallConfigurationService"
    user: "{{esf_username}}"
    password: "{{esf_password}}"
    status_code: 200
    force_basic_auth: yes
    validate_certs: no
    method: GET
  register: firewall_config


#Parse Firewall Open Ports List and full firewall properties from URI response
- name: Parse Firewall Open Ports List and Full Firewall Properties
  set_fact:
    firewall_open_ports: "{{ firewall_config.json.properties.get('firewall.open.ports') }}"
    firewall_properties: "{{ firewall_config.json.properties }}"

- name: update firewall open ports list block
  block:
    - name: Add Port 1883 for interface Chirpbridge to Firewall Open Ports List (SKIP = port already opened)
      set_fact: 
        firewall_properties: "{{ firewall_properties | combine(new_item) }}"
      vars:
        new_item: { 'firewall.open.ports': '{{ firewall_open_ports }};1883,tcp,0.0.0.0/0,chirpbridge,,,,#'}
      with_dict: "{{ firewall_properties }}"

    - name: Apply firewall update to ESF (SKIP = port already open)
      uri:
        url: "{{ esf_api_http_protocol }}://127.0.0.1/services/configuration/v1/configurableComponents/configurations/byPid/org.eclipse.kura.net.admin.FirewallConfigurationService/_update"
        user: "{{esf_username}}"
        password: "{{esf_password}}"
        status_code: 200
        force_basic_auth: yes
        validate_certs: no
        method: POST
        body_format: json
        body:
          takeSnapshot: true
          componentConfigurationRequest:
            properties: 
              "{{ firewall_properties }}"
  when: firewall_open_ports is not search("1883,tcp,0.0.0.0/0,chirpbridge,,,,#") #block when

##ESF 6.2.0 Only: Set chirpbridge network to Not Managed by ESF 
- name: Set chirpbridge network to not managed by ESF block
  block:
    #Get Current Network Config
    - name: Get Current Network Configuration from ESF (SKIP = ESF 7)
      uri:
        url: "{{ esf_api_http_protocol }}://127.0.0.1/services/configuration/v1/configurableComponents/configurations/byPid/org.eclipse.kura.net.admin.NetworkConfigurationService"
        user: "{{esf_username}}"
        password: "{{esf_password}}"
        status_code: 200
        force_basic_auth: yes
        validate_certs: no
        method: GET
      register: network_config

    #Confirm that the chirpbridge network exists
    - name: Parse Network Config (SKIP = ESF 7)
      set_fact:
        network_properties: "{{ network_config.json.properties }}"
    
    - name: Verify chirpbridge network exists (SKIP = Pass or ESF 7)
      fail:
        msg: "Chirpbridge network not found. Try again or contact Eurotech for support."
      when: '"net.interface.chirpbridge.config.ip4.status" not in network_properties.keys()'

    #Apply snapshot containing config for setting Chirpbridge to Not Managed
    #Due to bug in REST APIs for ESF 6, you must change network settings by applying a snapshot. The configuration REST API will fail to apply network settings. 
    #This issue is resolved in ESF 7. 
    - name: Apply Chirpbridge Settings Update Snapshot to ESF (SKIP = ESF 7)
      uri:
        url: "{{ esf_api_http_protocol }}://127.0.0.1/services/configuration/v1/snapshots/_upload"
        user: "{{esf_username}}"
        password: "{{esf_password}}"
        status_code: 200
        force_basic_auth: yes
        validate_certs: no
        method: POST
        headers: 
          Content-Type: "application/xml" 
        body: "{{lookup('url', aws_url+'/snapshots/chirpbridge_config_only_status.xml', errors='strict', split_lines=False)}}" #stream xml file directly from AWS 
      
    #Due to bug in REST APIs for ESF 6, applying new settings using the Configuration API or in some cases when applying via snapshot will cause
    #the services to crash, or ESF to improperly invalidate the pointer to the services. 
    #
    #Kura MUST be restarted after applying these configuration changes to resolve the issue. 
    #This issue is resolved in ESF 7.
    #
    #Since we adjusted Firewall settings with the Configuration API and applied a snapshot to adjust network settings (and no additional configuration changes are required after this point), 
    #we must restart ESF now. 

    #Restart ESF
    - name: Bounce Kura Block (ESF 6, log file) 
      block:
        - name: "Restart ESF: Setup variables (SKIP = ESF 7)"
          set_fact:
            tmp_tail_log_file: /tmp/tail_file.out
            timeout_value: 400 # async should terminate the task, but linux timeout command is used below as well for backup
            log_file: /var/log/kura.log
            
        - name: "Restart ESF: Setup and start temporary shadow log (SKIP = ESF 7)"
          shell: timeout {{ timeout_value }} tail -n 0 -f {{ log_file }} > {{ tmp_tail_log_file }}
          async: "{{ timeout_value }}"
          poll: 0
          
        - name: "Restart ESF: Restart ESF (SKIP = ESF 7)"
          systemd:
            name: kura
            state: restarted

        - name: "Restart ESF: Wait for ESF to finish restarting (SKIP = ESF 7)"
          wait_for:
            timeout: "{{ timeout_value }}"
            path: "{{ tmp_tail_log_file }}"
            search_regex: "{{ pattern_search }}"
          vars:
            pattern_search: "(org\\.eclipse\\.kura\\.web\\.Console\\.\\.\\.\\.Done)"

      rescue:
        - name: ESF failed to restart within 6 minutes
          fail:
            msg: "FAILURE: ESF failed to restart within 6 minutes. Check ESF log for errors."
  when: esf_major_version == "6" #block when